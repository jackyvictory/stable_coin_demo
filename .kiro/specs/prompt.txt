1. 参考 https://donate.imsafu.com，像素级复刻一个网站出来，包括首页、以及点击 "Pay With imsafu" 按钮之后的所有页面与交互，但是将其中的 imsafu 相关的文字、图片等，全部替换成 EVO Payment（EVO Payment 的图片使用 demo/public/images/logo.png），实现一个支持稳定币支付的收银台页面
实施思路：
a. 在 imsafu 目录中，做个爬虫脚本，将 https://donate.imsafu.com 的首页、以及点击 "Pay With imsafu" 按钮之后的所有页面与交互，完整爬取下来，包括页面的 html/css/js，以及图片等静态资源，将爬下来的内容放到 imsafu 目录中
b. 分析爬下来的内容，像素级复刻页面，将其中的 imsafu 相关的文字、图片等，全部替换成 EVO Payment，将代码保存到 demo 目录中
c. 在展示二维码页面时，实现 BNB Smart Chain Mainnet 区块链的交易监听，在用户完成付款后，页面自动跳转到支付成功页面

2. 在 imsafu 目录是从 https://donate.imsafu.com 爬下来的部分页面代码。使用 ./demo 作为项目的工作目录。参考 https://donate.imsafu.com 和爬下来的代码，复刻一个与 https://donate.imsafu.com 一样的 demo 出来 
要求：
a. 复刻首页（商品选购页面）https://donate.imsafu.com，包括页面样式、图片、文字
b. 复刻收银台页面（点击首页的 Pay With imsafu 按钮后，跳转的页面）https://imsafu.com/payment_qrcode?payID=pay_01K36R5TXAX6EN1QGHHVKD36EJ&brand=IMSAFU.com&memo=Food+Donation+%28Peanut%29&redirect_url=https%3A%2F%2Fdonate.imsafu.com%2Fsuccess&currency=USD，包括页面样式、图片、文字、下拉框、点击下拉框后的弹窗
c. 复刻选定 “Select Payment” 与 “Select Network” 之后，弹出的收银台页面 https://imsafu.com/payment_qrcode?payID=pay_01K36R5TXAX6EN1QGHHVKD36EJ&brand=IMSAFU.com&memo=Food+Donation+%28Peanut%29&redirect_url=https%3A%2F%2Fdonate.imsafu.com%2Fsuccess&currency=USD，二维码使用固定图片 /Users/zhangjacky/src/stable_coin_payment/demo/images/wallet_qr.jpg
d. 展示二维码页面时，实现 BNB Smart Chain Mainnet 区块链的交易监听，在用户完成付款后，页面监听到同样金额的区块链钱包入账交易，自动跳转到支付成功页面
e. 复刻的所有内容，将 imsafu 的文字替换为 EVO Payment，将 imsafu 的图片替换为 /Users/zhangjacky/src/stable_coin_payment/demo/images/logo.png



背景：
 这个任务列表，已经执行了大部分，目前遇到的问题是区块链监听交易的调用不符合预期，具体问题：
【符合预期】二维码页面加载时，页面提示 Blockchain Connected，区块链rpc调用返回成功
【不符合预期】等待一段时间后，页面触发自动查询，调用了两次 rpc，第一次返回成功、第二次返回频率超限
【不符合预期】手动点击按钮，时页面提示 Monitor Active - monitoring，但是不会触发rpc调用，控制台输出一直是 [Log] 🔄 [MANUAL-REFRESH] Manual verification failed: – "Monitor is paused due to rate limit, please wait" (qrcode.js, line 535)
【不符合预期】然后等了几十秒，再次触发自动查询，调用了两次 rpc，第一次返回成功、第二次返回频率超限

出现这个问题的原因，应该是每次轮询会调用两次 rpc：
第一次RPC调用：checkConnection() → getBlockNumber()
第二次RPC调用：getLatestTokenTransfers() → getPastEvents()

第一次调用没有问题、返回成功，第二次调用由于查询的区块过多，导致返回速率超限

调试方案：
1.重新设计区块链的查询逻辑，并且暂时移除自动查询逻辑，在二维码页面中增加2个临时的调试按钮：GetBlockNumber, GetBlockNumber+GetPastEvents，然后我来手动调试
2.点击 GetBlockNumber 时，将返回的区块ID记录到本地
3.点击 GetBlockNumber+GetGetPastEvents 时，先触发 GetBlockNumber 获取最新的区块 ID，然后计算本地上次记录的区块ID与最新区块ID之间的差值，调用 rpc 获取差值的区块ID的交易详情


注意编码规则：所有调试代码放到 demo/debug 目录中，不要产生过程的 .md 总结文档
